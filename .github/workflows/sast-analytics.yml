name: studiographene-analytics
on:
  workflow_call:
    inputs:
      PULSE_URL:
        type: string
        default: "https://a0lrn1xwl4.execute-api.eu-west-1.amazonaws.com"
      semgrep_options:
        type: string
        default: ""
      sast_report_pulse_before_step_command:
        type: string
        default: ""
      sast_report_pulse_after_step_command:
        type: string
        default: ""

jobs:
  sast_report_pulse:
    name: SAST report feed to Pulse
    runs-on: ubuntu-latest
    container:
      image: public.ecr.aws/studiographene/ci:node-20-alpine
    permissions: write-all
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          ref: ${{ github.ref }}
      - name: before step
        if: ${{ inputs.sast_report_pulse_before_step_command != '' }}
        run: |
          ${{ inputs.sast_report_pulse_before_step_command}}
      - name: SAST Scan
        id: generate_report
        run: |
          semgrep --config "p/default" --config /root/configs/semgrep/rules/eslint.yml --sarif ${{ inputs.semgrep_options }} | tee semgrep.sarif
      - name: Display Errors
        id: display_errors
        run: |
          jq -n '[inputs | .runs[].results[] | {ruleId: .ruleId, message: .message.text, location: .locations[].physicalLocation.artifactLocation.uri, lineNo: .locations[].physicalLocation.region.startLine, snippet: .locations[].physicalLocation.region.snippet.text}]' semgrep.sarif > temp_errors.json
          date=$(date +%Y-%m-%d)
          branch=${GITHUB_REF_NAME}
          repo=${{ github.repository }}
          orgId=${{ github.event.organization.id }}
          repoId=${{ github.repository_id }}
          data=$(jq -n --arg date "$date" --arg branch "$branch" --arg orgId "$orgId" --arg repoId "$repoId" --arg repo "$repo" '{date: $date, branch: $branch, repo: $repo, orgId: $orgId, repoId: $repoId, errors: input}' temp_errors.json)
          # Write the data to a JSON file
          echo "No. of error findings: $data"
          echo "$data" > sast_errors.json
          url="${{ inputs.PULSE_URL }}/github/repo-sast-errors"
          content_type="application/json"  # Set your content type

          # Send the request
          curl -X POST \
                  -H "Content-Type: $content_type" \
                  --data-binary "@sast_errors.json" \
                  "$url"

      - name: after step
        if: ${{ inputs.sast_report_pulse_after_step_command != '' }}
        run: |
          ${{ inputs.sast_report_pulse_after_step_command}}
